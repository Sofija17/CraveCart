@model CraveCart.Models.Restaurant

@{
    ViewBag.Title = "Restaurant Details";
    int? dailyDealFoodId = ViewBag.DailyDealFoodId as int?;
}

<style>
    #cartItems li {
        margin-bottom: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .remove-from-cart {
        margin-left: 20px; /* mesto megju remove buttons*/
    }
</style>


<div class="container">

    <hr />
    <h3>Menu</h3>

    <!-- Check if the restaurant has any food items -->
    @if (Model.Foods != null && Model.Foods.Any())
    {
        <table id="menuTable" class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Decription</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var food in Model.Foods)
                {
                    var isDailyDeal = dailyDealFoodId.HasValue && dailyDealFoodId == food.Id;
                    var discountedPrice = isDailyDeal ? food.Price * 0.80m : food.Price;
                    <tr>
                        <td>
                            @if (!string.IsNullOrWhiteSpace(food.ImageUrl))
                            {
                                <img src="@food.ImageUrl" alt="Image of @food.Name" style="width: 150px; height: auto;" />
                            }
                        </td>
                        <td>@food.Name</td>
                        <td>@food.Price.ToString("C")</td>
                        <td>@food.Ingredients</td>

                        <td>
                            @if (User.IsInRole("Admin"))
                            {
                                <span style="margin-right: 10px;">
                                    @Html.ActionLink("Edit", "EditFoodItem", new { id = food.Id })
                                </span>
                                <span style="margin-right: 10px;">
                                    <button data-food-id="@food.Id" class="js-delete btn-link">Delete</button>
                                </span>
                            }
                            @if (User.IsInRole("Editor"))
                            {
                                <span style="margin-right: 10px;">
                                    @Html.ActionLink("Edit", "EditFoodItem", new { id = food.Id })
                                </span>


                            }

                            <button data-food-name="@food.Name" data-food-price="@food.Price" class="add-to-cart btn btn-success">Add To Cart</button>

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No food items available for this restaurant. You can add some by clicking the button below.</p>
    }
    <!-- Button to Create a New Food Item -->
    <div>
        @if (User.IsInRole("Admin"))
        {
            @Html.ActionLink("Add New Food Item", "CreateFoodItem", new { restaurantId = Model.Id }, new { @class = "btn btn-danger" })
        }

    </div>

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
    </div>

    <hr />
    <!-- Shopping Cart Section -->

    <div id="shoppingCart" style="border: 1px solid #ccc; padding: 10px; border-radius: 5px;">
        <h4>Shopping Cart:</h4>
        <ul id="cartItems"></ul>
        <strong>Total: $<span id="cartTotal">0.00</span></strong>
        <br>
        <button id="checkoutBtn" class="btn btn-primary">Checkout</button>
    </div>


</div>

<script src="https://cdn.jsdelivr.net/npm/bootbox@5.5.2/bootbox.min.js"></script>

@section scripts {
    <script>
        // Check if the user is authenticated and store the value in a variable
        var isAuthenticated = @User.Identity.IsAuthenticated.ToString().ToLower();

        $(document).ready(function () {
            var cart = JSON.parse(localStorage.getItem("shoppingCart")) || [];

            function updateCart() {
                $("#cartItems").empty();
                var total = 0;
                $.each(cart, function (index, item) {
                    $("#cartItems").append("<li>" + item.name + " - " + item.price.toFixed(2) +
                        "<button class='remove-from-cart btn btn-danger btn-sm' data-index='" + index + "'>X</button></li>");
                    total += item.price;
                });
                $("#cartTotal").text(total.toFixed(2));

                // Save the cart to local storage
                localStorage.setItem("shoppingCart", JSON.stringify(cart));
            }

            // Load cart items on page load
            updateCart();

            // Add to cart functionality
            $(".add-to-cart").on("click", function () {
                // Check if the user is authenticated
                if (!isAuthenticated) {
                    // Redirect to the login page if not authenticated
                    window.location.href = '@Url.Action("Login", "Account", new { ReturnUrl = Request.Url.AbsolutePath })';
                    return; // Exit the function
                }

                var foodName = $(this).data("food-name");
                var foodPrice = parseFloat($(this).data("food-price"));
                var item = { name: foodName, price: foodPrice };

                cart.push(item);
                updateCart();
            });

            // Remove item from cart
            $(document).on("click", ".remove-from-cart", function () {
                var index = $(this).data("index");
                cart.splice(index, 1); // Remove the item from the cart array
                updateCart(); // Update the cart display
            });

            // Checkout button functionality
            $("#checkoutBtn").on("click", function () {
                window.location.href = '@Url.Action("OrderSummary", "Restaurants")'; // Generates the correct URL
            });

            var table = $("#menuTable").DataTable();

            // Delete functionality for food items in the menu
            $("#menuTable").on("click", ".js-delete", function () {
                var button = $(this);
                var foodId = button.attr("data-food-id");
                console.log("Delete button clicked for food ID:", foodId); // Log food ID

                // Display bootbox confirmation dialog
                bootbox.confirm("Are you sure you want to delete this item from the menu?", function (result) {
                    console.log("Bootbox result:", result); // Log bootbox confirmation result
                    if (result) {
                        // Construct the API URL dynamically
                        var apiUrl = window.location.origin + "/api/Restaurants1/" + foodId;
                        console.log("Request URL:", apiUrl); // Log constructed URL

                        // Make the DELETE AJAX call
                        $.ajax({
                            url: "/Restaurants/DeleteFoodItem/" + foodId,
                            method: "GET",
                            success: function () {
                                table.row(button.parents("tr")).remove().draw(); // Remove row from DataTable
                            },
                            error: function (err) {
                                console.error("Error in AJAX request:", err);
                            }
                        });
                    }
                });
            });
        });
    </script>
}
